#!/bin/bash
#
# Copyright (C) 2014 eNovance SAS <licensing@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
set -x
set -e

gerrit_host=<%= scope.function_hiera(["gerrit_url"]) %>
gerrit_ssh_port=<%= @gerrit['gerrit_sshd_port'] %>
mh="<%= scope.function_hiera(["managesf_url"]) %>"
gh="$gerrit_host:$gerrit_ssh_port"
jh="<%= scope.function_hiera(["jenkins_url"]) %>"
admin="<%= @gerrit['gerrit_admin_username'] %>"
admin_http_password="<%= @gerrit['gerrit_admin_password'] %>"
admin_email="<%= @gerrit['gerrit_admin_mail'] %>"
gerrit_ssh_key="/root/gerrit_admin_rsa"
jenkins_kick_script="/usr/local/jenkins/slave_scripts/kick.sh"
auth=$admin:$admin_http_password

echo ""
echo "==== Creating config project ===="
echo "{\"description\":\"Config repository\"}" | curl "http://$mh/project/config" -X PUT -d @- -H "Content-type: application/json" -H "Authorization: Basic `echo -n $auth | base64`"

echo ""
echo "==== Cloning the config repo ===="
echo "ssh -o StrictHostKeyChecking=no -i $gerrit_ssh_key \$@" > /tmp/ssh_wrapper.sh
chmod +x /tmp/ssh_wrapper.sh
export GIT_SSH="/tmp/ssh_wrapper.sh"
export GIT_COMMITTER_NAME=$admin
export GIT_COMMITTER_EMAIL=$admin_email
git clone ssh://$admin@$gh/config /tmp/config

#TODO: find out why this is called multiple times...
if [ -d "/tmp/config/jjb" ]; then
    echo "Config repository already initialised"
    exit 0
fi


echo ""
echo "==== Adding JJB files to the config repo ===="
cd /tmp/config
cp -Rv /usr/share/sf-jjb /tmp/config/jobs

echo ""
echo "==== Adding Zuul files to the config repo ===="
cd /tmp/config
cp -Rv /usr/share/sf-zuul /tmp/config/zuul

echo ""
echo "==== Commiting the changes ===="
git add .
git commit -a --author "$admin <$admin_email>" -m "JJB/Zuul files"

echo ""
echo "==== Pushing changes ===="
git push origin master

cd /tmp/
rm -rf /tmp/config
rm -f /tmp/ssh_wrapper.sh

echo ""
echo "==== Kick starting JJB ===="
exec $jenkins_kick_script

echo ""
echo "Done!"
